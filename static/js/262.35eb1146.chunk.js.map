{"version":3,"file":"static/js/262.35eb1146.chunk.js","mappings":"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","sources":["components/ColorIndicator.jsx","components/DNAEncoder.jsx","util.js","data/DNA_keys|lazy|/^/.*_DNA_key_v1/.json$/|groupOptions: {}|namespace object"],"sourcesContent":["/**\r\n * ColorIndicator generates a circular color indicator\r\n *\r\n * @param {string} props.color - The fill color of the indicator.\r\n * @param {string} props.height - The height of the indicator (aspect ratio = 1).\r\n * @param {string} props.margin - The margin around the indicator (https://developer.mozilla.org/en-US/docs/Web/CSS/margin).\r\n * @returns {JSX.Element} styled \\<div> element.\r\n */\r\nfunction ColorIndicator({ color, height, margin }) {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tbackgroundColor: color,\r\n\t\t\t\tborder: '2px solid rgba(255, 255, 255, 0.5)',\r\n\t\t\t\taspectRatio: '1',\r\n\t\t\t\theight,\r\n\t\t\t\tborderRadius: '50%',\r\n\t\t\t\tmargin,\r\n\t\t\t\tboxShadow: '0 2px 4px rgba(0, 0, 0, 0.2)',\r\n\t\t\t}}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nColorIndicator.defaultProps = {\r\n\tcolor: 'transparent',\r\n\theight: '1.5rem',\r\n\tmargin: '0',\r\n};\r\n\r\nexport default ColorIndicator;\r\n","import React, { useState, useEffect, useRef, useMemo, useCallback } from 'react';\r\nimport {\r\n\tFormControl,\r\n\tInputLabel,\r\n\tSelect,\r\n\tMenuItem,\r\n\tTextField,\r\n\tSlider,\r\n\tTypography,\r\n\tSwitch,\r\n\tIconButton,\r\n\tBox,\r\n\tPaper,\r\n} from '@mui/material';\r\nimport { ContentCopy } from '@mui/icons-material';\r\nimport {\r\n\tsnakeCaseToTitleCase,\r\n\treplaceDashesAndUnderscores,\r\n\tcamelCaseToTitleCase,\r\n\taddSpaceBeforeNumbers,\r\n} from '../util';\r\nimport ColorIndicator from './ColorIndicator';\r\nimport { motion } from 'framer-motion';\r\nimport { styled } from '@mui/material/styles';\r\n\r\n// Import the color palette\r\nimport geneColorPalette from '../data/gene_color_pallet.json';\r\n\r\n// Encoder functions\r\nconst encodeInt = (value, byteSize) => {\r\n\treturn parseInt(value)\r\n\t\t.toString(16)\r\n\t\t.padStart(byteSize * 2, '0');\r\n};\r\n\r\nconst GlowingPaper = styled(Paper)(({ theme }) => ({\r\n\tbackgroundColor: 'rgba(0, 0, 0, 0.6)',\r\n\tboxShadow: '0 0 10px rgba(0, 255, 255, 0.5)',\r\n\ttransition: 'box-shadow 0.3s ease-in-out',\r\n\t'&:hover': {\r\n\t\tboxShadow: '0 0 20px rgba(0, 255, 255, 0.8)',\r\n\t},\r\n}));\r\n\r\nconst FuturisticSlider = styled(Slider)(({ theme }) => ({\r\n\t'& .MuiSlider-thumb': {\r\n\t\theight: 28,\r\n\t\twidth: 28,\r\n\t\tbackgroundColor: '#00ffff',\r\n\t\tboxShadow: '0 0 10px rgba(0, 255, 255, 0.8)',\r\n\t},\r\n\t'& .MuiSlider-track': {\r\n\t\theight: 4,\r\n\t\tbackgroundColor: '#00ffff',\r\n\t},\r\n\t'& .MuiSlider-rail': {\r\n\t\theight: 4,\r\n\t\tbackgroundColor: 'rgba(0, 255, 255, 0.2)',\r\n\t},\r\n}));\r\n\r\nfunction DNAEncoder() {\r\n\tconst [protocolVersion] = useState(1); // Fixed protocol version\r\n\tconst [stakingBoost, setStakingBoost] = useState(0); // NFT boost determined by slider\r\n\tconst [collectionType, setCollectionType] = useState('');\r\n\tconst [collectionTypes, setCollectionTypes] = useState({});\r\n\tconst [dnaKey, setDnaKey] = useState(null);\r\n\tconst [inputValues, setInputValues] = useState({});\r\n\tconst [errorValues, setErrorValues] = useState({});\r\n\tconst [fontSize, setFontSize] = useState(16); // Initial font size\r\n\tconst textRef = useRef(null);\r\n\tconst containerRef = useRef(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (protocolVersion)\r\n\t\t\timport('../data/protocol_versions.json').then((data) => {\r\n\t\t\t\tsetCollectionTypes(data[`v${protocolVersion}`]);\r\n\t\t\t});\r\n\t\tif (collectionType) {\r\n\t\t\timport(`../data/DNA_keys/${collectionType}_DNA_key_v1.json`)\r\n\t\t\t\t.then((key) => {\r\n\t\t\t\t\tsetDnaKey(key.default);\r\n\t\t\t\t\tconst initialInputValues = {};\r\n\t\t\t\t\tconst initialErrorValues = {};\r\n\t\t\t\t\tObject.keys(key.default.genes).forEach((gene) => {\r\n\t\t\t\t\t\tinitialInputValues[gene] = '';\r\n\t\t\t\t\t\tinitialErrorValues[gene] = false;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tsetInputValues(initialInputValues);\r\n\t\t\t\t\tsetErrorValues(initialErrorValues);\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) =>\r\n\t\t\t\t\tconsole.error('Error loading DNA key file:', error),\r\n\t\t\t\t);\r\n\t\t}\r\n\t}, [protocolVersion, collectionType]);\r\n\r\n\tconst handleInputChange = (e, gene) => {\r\n\t\t// Specialized input parsing\r\n\t\tlet temp = gene.split('_');\r\n\t\tlet geneType = temp[temp.length - 1];\r\n\t\tlet value;\r\n\t\tif (geneType === 'bool') {\r\n\t\t\tvalue = e.target.checked ? '01' : '00';\r\n\t\t} else {\r\n\t\t\tvalue = e.target.value;\r\n\t\t}\r\n\r\n\t\t// Specialized error checking\r\n\t\tlet isError = false;\r\n\t\tif (geneType === 'int') {\r\n\t\t\tconst numBytes = dnaKey.genes[gene];\r\n\t\t\tconst minimum = 0;\r\n\t\t\tconst maximum = Math.pow(2, numBytes * 8) - 1;\r\n\r\n\t\t\tconst parsedValue = parseInt(value, 10);\r\n\t\t\tconst isNonEmpty = value !== '';\r\n\t\t\tconst isValidInteger =\r\n\t\t\t\t!isNaN(parsedValue) && parsedValue.toString() === value;\r\n\t\t\tconst isInRange = parsedValue >= minimum && parsedValue <= maximum;\r\n\r\n\t\t\tisError = isNonEmpty && (!isValidInteger || !isInRange);\r\n\t\t}\r\n\r\n\t\tsetErrorValues((prev) => ({ ...prev, [gene]: isError }));\r\n\t\tif (!isError) {\r\n\t\t\tsetInputValues((prev) => ({ ...prev, [gene]: value }));\r\n\t\t} else {\r\n\t\t\tsetTimeout(\r\n\t\t\t\t() => setErrorValues((prev) => ({ ...prev, [gene]: !isError })),\r\n\t\t\t\t500,\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\tconst renderInputFields = () => {\r\n\t\tif (!dnaKey) return null;\r\n\r\n\t\t// Skip the first three genes (protocol version, NFT boost, collection type)\r\n\t\tconst genesArray = Object.entries(dnaKey.genes).slice(3);\r\n\r\n\t\treturn genesArray.map(([gene, _]) => {\r\n\t\t\tif (gene.endsWith('_id')) {\r\n\t\t\t\tconst optionsKey = `${gene}s`;\r\n\t\t\t\tconst options = dnaKey[optionsKey];\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<FormControl key={gene} fullWidth margin='normal'>\r\n\t\t\t\t\t\t<InputLabel id={`${gene}-label`}>\r\n\t\t\t\t\t\t\t{snakeCaseToTitleCase(gene)}\r\n\t\t\t\t\t\t</InputLabel>\r\n\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\tlabelId={`${gene}-label`}\r\n\t\t\t\t\t\t\tvalue={inputValues[gene]}\r\n\t\t\t\t\t\t\tonChange={(e) => handleInputChange(e, gene)}\r\n\t\t\t\t\t\t\tlabel={snakeCaseToTitleCase(gene)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{Object.entries(options).map(([name, value]) => (\r\n\t\t\t\t\t\t\t\t<MenuItem key={value} value={value}>\r\n\t\t\t\t\t\t\t\t\t{addSpaceBeforeNumbers(\r\n\t\t\t\t\t\t\t\t\t\treplaceDashesAndUnderscores(name),\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t);\r\n\t\t\t} else if (gene.endsWith('_int')) {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tkey={gene}\r\n\t\t\t\t\t\tlabel={snakeCaseToTitleCase(gene)}\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tvalue={inputValues[gene]}\r\n\t\t\t\t\t\tonChange={(e) => handleInputChange(e, gene)}\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tmargin='normal'\r\n\t\t\t\t\t\terror={errorValues[gene]}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t} else if (gene.endsWith('_color')) {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<FormControl key={gene} fullWidth margin='normal'>\r\n\t\t\t\t\t\t<InputLabel id={`${gene}-label`}>\r\n\t\t\t\t\t\t\t{snakeCaseToTitleCase(gene)}\r\n\t\t\t\t\t\t</InputLabel>\r\n\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\tlabelId={`${gene}-label`}\r\n\t\t\t\t\t\t\tvalue={snakeCaseToTitleCase(inputValues[gene])}\r\n\t\t\t\t\t\t\tonChange={(e) => handleInputChange(e, gene)}\r\n\t\t\t\t\t\t\tlabel={snakeCaseToTitleCase(gene)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{Object.entries(geneColorPalette).map(\r\n\t\t\t\t\t\t\t\t([key, { name, hex }]) => (\r\n\t\t\t\t\t\t\t\t\t<MenuItem key={key} value={key}>\r\n\t\t\t\t\t\t\t\t\t\t<ColorIndicator\r\n\t\t\t\t\t\t\t\t\t\t\tcolor={hex}\r\n\t\t\t\t\t\t\t\t\t\t\tmargin='0 0.5rem 0 0'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t{addSpaceBeforeNumbers(\r\n\t\t\t\t\t\t\t\t\t\t\tcamelCaseToTitleCase(\r\n\t\t\t\t\t\t\t\t\t\t\t\treplaceDashesAndUnderscores(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname,\r\n\t\t\t\t\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t);\r\n\t\t\t} else if (gene.endsWith('_bool')) {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<FormControl key={gene} fullWidth margin='normal'>\r\n\t\t\t\t\t\t<Typography>{snakeCaseToTitleCase(gene)}</Typography>\r\n\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\tchecked={inputValues[gene] === '01'}\r\n\t\t\t\t\t\t\tonChange={(e) => handleInputChange(e, gene)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tkey={gene}\r\n\t\t\t\t\t\tlabel={snakeCaseToTitleCase(gene)}\r\n\t\t\t\t\t\tvalue={inputValues[gene]}\r\n\t\t\t\t\t\tonChange={(e) => handleInputChange(e, gene)}\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tmargin='normal'\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst encodeDNA = useCallback(() => {\r\n\t\tif (!dnaKey) return '';\r\n\r\n\t\tlet dnaString = '';\r\n\t\tdnaString += encodeInt(protocolVersion, 1); // Fixed protocol version\r\n\t\tdnaString += encodeInt(stakingBoost, 1); // Encoding staking boost\r\n\r\n\t\tdnaString += Object.keys(collectionTypes).find(\r\n\t\t\t(key) => collectionTypes[key] === collectionType,\r\n\t\t);\r\n\r\n\t\t// Encoding collection type\r\n\t\tObject.entries(dnaKey.genes)\r\n\t\t\t.slice(3)\r\n\t\t\t.forEach(([gene, length]) => {\r\n\t\t\t\tconst value = inputValues[gene];\r\n\r\n\t\t\t\t// If the value is not set yet, encode it as # for the length\r\n\t\t\t\tif (!value) {\r\n\t\t\t\t\tdnaString += '#'.repeat(length * 2);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Encode the value\r\n\t\t\t\tif (\r\n\t\t\t\t\tgene.endsWith('_id') ||\r\n\t\t\t\t\tgene.endsWith('_color') ||\r\n\t\t\t\t\tgene.endsWith('_bool')\r\n\t\t\t\t) {\r\n\t\t\t\t\t// dnaString += encodeId(value, dnaKey[`${gene}s`]);\r\n\t\t\t\t\tdnaString += value;\r\n\t\t\t\t} else if (gene.endsWith('_int')) {\r\n\t\t\t\t\tdnaString += encodeInt(value, length);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdnaString += encodeInt(value, length);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\treturn dnaString.toUpperCase();\r\n\t}, [dnaKey, protocolVersion, stakingBoost, collectionType, inputValues, collectionTypes]);\r\n\r\n\tconst encodedDNA = useMemo(() => encodeDNA(), [encodeDNA]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst adjustFontSize = () => {\r\n\t\t\tif (textRef.current && containerRef.current) {\r\n\t\t\t\tlet currentSize = fontSize;\r\n\t\t\t\ttextRef.current.style.fontSize = `${currentSize}px`;\r\n\t\t\t\t\r\n\t\t\t\twhile (textRef.current.scrollWidth > containerRef.current.clientWidth && currentSize > 8) {\r\n\t\t\t\t\tcurrentSize--;\r\n\t\t\t\t\ttextRef.current.style.fontSize = `${currentSize}px`;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tsetFontSize(currentSize);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tadjustFontSize();\r\n\t\twindow.addEventListener('resize', adjustFontSize);\r\n\t\treturn () => window.removeEventListener('resize', adjustFontSize);\r\n\t}, [encodedDNA, fontSize]);\r\n\r\n\tconst handleCopyToClipboard = () => {\r\n\t\tnavigator.clipboard.writeText(encodedDNA);\r\n\t};\r\n\r\n\tconst handleCollectionTypeChange = (e) => {\r\n\t\tconst newCollectionType = e.target.value;\r\n\t\tsetCollectionType(newCollectionType);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Box sx={{ maxWidth: '100%', overflow: 'hidden' }}>\r\n\t\t\t{encodedDNA && (\r\n\t\t\t\t<motion.div\r\n\t\t\t\t\tinitial={{ opacity: 0, y: 20 }}\r\n\t\t\t\t\t\tanimate={{ opacity: 1, y: 0 }}\r\n\t\t\t\t\t\ttransition={{ duration: 0.5 }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<GlowingPaper elevation={3} sx={{ p: 2, mb: 2 }}>\r\n\t\t\t\t\t\t<Box \r\n\t\t\t\t\t\t\tref={containerRef}\r\n\t\t\t\t\t\t\tsx={{ \r\n\t\t\t\t\t\t\t\tdisplay: 'flex', \r\n\t\t\t\t\t\t\t\talignItems: 'center', \r\n\t\t\t\t\t\t\t\tjustifyContent: 'space-between',\r\n\t\t\t\t\t\t\t\twidth: '100%'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Typography \r\n\t\t\t\t\t\t\t\tref={textRef}\r\n\t\t\t\t\t\t\t\tvariant='h6' \r\n\t\t\t\t\t\t\t\tsx={{ \r\n\t\t\t\t\t\t\t\t\tcolor: '#00ffff',\r\n\t\t\t\t\t\t\t\t\twhiteSpace: 'nowrap',\r\n\t\t\t\t\t\t\t\t\toverflow: 'hidden',\r\n\t\t\t\t\t\t\t\t\ttextOverflow: 'ellipsis',\r\n\t\t\t\t\t\t\t\t\tflexGrow: 1,\r\n\t\t\t\t\t\t\t\t\tmr: 2,\r\n\t\t\t\t\t\t\t\t\tfontSize: `${fontSize}px`,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{encodedDNA}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t{collectionType && (\r\n\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\tonClick={handleCopyToClipboard}\r\n\t\t\t\t\t\t\t\t\taria-label='copy'\r\n\t\t\t\t\t\t\t\t\tsx={{ color: '#00ffff', flexShrink: 0 }}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<ContentCopy />\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</GlowingPaper>\r\n\t\t\t\t</motion.div>\r\n\t\t\t)}\r\n\r\n\t\t\t<FormControl fullWidth margin='normal'>\r\n\t\t\t\t<InputLabel id='collection-type-label'>Collection Type</InputLabel>\r\n\t\t\t\t<Select\r\n\t\t\t\t\tlabelId='collection-type-label'\r\n\t\t\t\t\tvalue={collectionType}\r\n\t\t\t\t\tlabel='Collection Type'\r\n\t\t\t\t\tonChange={handleCollectionTypeChange}\r\n\t\t\t\t>\r\n\t\t\t\t\t{Object.entries(collectionTypes).map(([key, value]) => (\r\n\t\t\t\t\t\t<MenuItem key={key} value={value}>\r\n\t\t\t\t\t\t\t{snakeCaseToTitleCase(value)}\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Select>\r\n\t\t\t</FormControl>\r\n\r\n\t\t\t{collectionType && (\r\n\t\t\t\t<Box sx={{ mt: 2, mb: 2, px: 3.5 }}>\r\n\t\t\t\t\t<Typography gutterBottom sx={{ color: '#00ffff' }}>Staking Boost: {stakingBoost}%</Typography>\r\n\t\t\t\t\t<FuturisticSlider\r\n\t\t\t\t\t\tvalue={stakingBoost}\r\n\t\t\t\t\t\tonChange={(e, val) => setStakingBoost(val)}\r\n\t\t\t\t\t\tmin={0}\r\n\t\t\t\t\t\tmax={100}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Box>\r\n\t\t\t)}\r\n\r\n\t\t\t<Box sx={{ mt: 2 }}>\r\n\t\t\t\t{renderInputFields()}\r\n\t\t\t</Box>\r\n\t\t</Box>\r\n\t);\r\n}\r\n\r\nexport default DNAEncoder;\r\n","const isValidText = (text) => {\r\n\treturn text !== undefined && typeof text === 'string';\r\n};\r\n\r\nexport const addSpaceBeforeNumbers = (text) => {\r\n\tif (!isValidText(text)) {\r\n\t\treturn text;\r\n\t}\r\n\r\n\treturn text.replace(/(\\d+)/g, ' $1');\r\n};\r\n\r\nexport const camelCaseToTitleCase = (text) => {\r\n\tif (!isValidText(text)) {\r\n\t\treturn text;\r\n\t}\r\n\r\n\treturn text\r\n\t\t.split(/(?=[A-Z])/)\r\n\t\t.map((word) => word.charAt(0).toUpperCase() + word.slice(1))\r\n\t\t.join(' ');\r\n};\r\n\r\nexport const replaceDashesAndUnderscores = (text) => {\r\n\tif (!isValidText(text)) {\r\n\t\treturn text;\r\n\t}\r\n\r\n\treturn text.replace(/[_-]/g, ' ');\r\n};\r\n\r\nexport const snakeCaseToTitleCase = (text) => {\r\n\tif (!isValidText(text)) {\r\n\t\treturn text;\r\n\t}\r\n\r\n\treturn text\r\n\t\t.split('_')\r\n\t\t.map((word) => word.charAt(0).toUpperCase() + word.slice(1))\r\n\t\t.join(' ');\r\n};\r\n\r\nexport const toTitleCase = (text) => {\r\n\tif (!isValidText(text)) {\r\n\t\treturn text;\r\n\t}\r\n\r\n\treturn text.replace(/\\w\\S*/g, function (match) {\r\n\t\treturn match.charAt(0).toUpperCase() + match.substr(1).toLowerCase();\r\n\t});\r\n};\r\n","var map = {\n\t\"./accessories_DNA_key_v1.json\": [\n\t\t2309,\n\t\t309\n\t],\n\t\"./armor_DNA_key_v1.json\": [\n\t\t8708,\n\t\t708\n\t],\n\t\"./avatar_DNA_key_v1.json\": [\n\t\t9969,\n\t\t969\n\t],\n\t\"./persona_DNA_key_v1.json\": [\n\t\t935,\n\t\t935\n\t],\n\t\"./photon_DNA_key_v1.json\": [\n\t\t6266,\n\t\t266\n\t],\n\t\"./voucher_DNA_key_v1.json\": [\n\t\t2452,\n\t\t452\n\t],\n\t\"./weapons_DNA_key_v1.json\": [\n\t\t7987,\n\t\t987\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__.t(id, 3 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 745;\nmodule.exports = webpackAsyncContext;"],"names":["ColorIndicator","_ref","color","height","margin","_jsx","style","backgroundColor","border","aspectRatio","borderRadius","boxShadow","defaultProps","encodeInt","value","byteSize","parseInt","toString","padStart","GlowingPaper","styled","Paper","theme","transition","FuturisticSlider","Slider","_ref2","width","protocolVersion","useState","stakingBoost","setStakingBoost","collectionType","setCollectionType","collectionTypes","setCollectionTypes","dnaKey","setDnaKey","inputValues","setInputValues","errorValues","setErrorValues","fontSize","setFontSize","textRef","useRef","containerRef","useEffect","then","data","concat","key","default","initialInputValues","initialErrorValues","Object","keys","genes","forEach","gene","catch","error","console","handleInputChange","e","temp","split","geneType","length","target","checked","isError","numBytes","minimum","maximum","Math","pow","parsedValue","isNonEmpty","isValidInteger","isNaN","prev","setTimeout","encodeDNA","useCallback","dnaString","find","entries","slice","_ref6","endsWith","repeat","toUpperCase","encodedDNA","useMemo","adjustFontSize","current","currentSize","scrollWidth","clientWidth","window","addEventListener","removeEventListener","_jsxs","Box","sx","maxWidth","overflow","children","motion","div","initial","opacity","y","animate","duration","elevation","p","mb","ref","display","alignItems","justifyContent","Typography","variant","whiteSpace","textOverflow","flexGrow","mr","IconButton","onClick","handleCopyToClipboard","navigator","clipboard","writeText","flexShrink","ContentCopy","FormControl","fullWidth","InputLabel","id","Select","labelId","label","onChange","newCollectionType","map","_ref7","MenuItem","snakeCaseToTitleCase","mt","px","gutterBottom","val","min","max","renderInputFields","_ref3","_","optionsKey","options","_ref4","name","addSpaceBeforeNumbers","replaceDashesAndUnderscores","TextField","type","geneColorPalette","_ref5","hex","camelCaseToTitleCase","Switch","isValidText","text","undefined","replace","word","charAt","join","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","Error","code","ids","t","module","exports"],"sourceRoot":""}